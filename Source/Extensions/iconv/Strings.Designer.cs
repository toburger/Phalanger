//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PHP.Library.Iconv {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PHP.Library.Iconv.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected an illegal character in input string.
        /// </summary>
        internal static string illegal_character {
            get {
                return ResourceManager.GetString("illegal_character", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Copyright (C) 1999-2003 Free Software Foundation, Inc.
        ///# This file is part of the GNU LIBICONV Library.
        ///#
        ///# The GNU LIBICONV Library is free software; you can redistribute it
        ///# and/or modify it under the terms of the GNU Library General Public
        ///# License as published by the Free Software Foundation; either version 2
        ///# of the License, or (at your option) any later version.
        ///#
        ///# The GNU LIBICONV Library is distributed in the hope that it will be
        ///# useful, but WITHOUT ANY WARRANTY; without even the implied war [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string translit {
            get {
                return ResourceManager.GetString("translit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong charset &apos;{0}&apos;, conversion from &apos;{1}&apos; to &apos;{2}&apos; is not allowed.
        /// </summary>
        internal static string wrong_charset {
            get {
                return ResourceManager.GetString("wrong_charset", resourceCulture);
            }
        }
    }
}
